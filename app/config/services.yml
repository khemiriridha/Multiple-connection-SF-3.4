# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: true
    ErposBundle\Services\MenuUtilisateur:
        public: true
    
    app.security.authentication_event_listener:
        class: AppBundle\EventSubscriber\SecuritySubscriber
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@security.token_storage"
            - "@security.authentication_utils"
            - "@router"
            - "@service_container"
            - "@session"
        tags:
            - { name: kernel.event_subscriber }
            
    kernel.listener.exception_listener:
        class: AppBundle\EventSubscriber\ExceptionListener
        arguments: 
            - "@templating"
            - "@kernel"
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
            
    application_connector:
        class: AppBundle\Services\ApplicationConnector
        calls:
            - [ setContainer, ['@service_container'] ]
            
    menu_utilisateur:
        class: ErposBundle\Services\MenuUtilisateur
        arguments: 
            - "@doctrine.orm.entity_manager"
            - "@security.token_storage"
            - "@service_container"
            
    image_resize:
        class: AppBundle\Services\ImageResize
        
    kernel.listener.response:
        class: AppBundle\EventSubscriber\RequestListener
        arguments: 
            - "@templating"
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }